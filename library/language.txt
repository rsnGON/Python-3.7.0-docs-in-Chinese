33. Python Language Services
****************************

Python provides a number of modules to assist in working with the
Python language.  These modules support tokenizing, parsing, syntax
analysis, bytecode disassembly, and various other facilities.

These modules include:

* 33.1. "parser" — Access Python parse trees

  * 33.1.1. Creating ST Objects

  * 33.1.2. Converting ST Objects

  * 33.1.3. Queries on ST Objects

  * 33.1.4. Exceptions and Error Handling

  * 33.1.5. ST Objects

  * 33.1.6. Example: Emulation of "compile()"

* 33.2. "ast" — Abstract Syntax Trees

  * 33.2.1. Node classes

  * 33.2.2. Abstract Grammar

  * 33.2.3. "ast" Helpers

* 33.3. "symtable" — Access to the compiler’s symbol tables

  * 33.3.1. Generating Symbol Tables

  * 33.3.2. Examining Symbol Tables

* 33.4. "symbol" — Constants used with Python parse trees

* 33.5. "token" — Constants used with Python parse trees

* 33.6. "keyword" — Testing for Python keywords

* 33.7. "tokenize" — Tokenizer for Python source

  * 33.7.1. Tokenizing Input

  * 33.7.2. Command-Line Usage

  * 33.7.3. Examples

* 33.8. "tabnanny" — Detection of ambiguous indentation

* 33.9. "pyclbr" — Python class browser support

  * 33.9.1. Function Objects

  * 33.9.2. Class Objects

* 33.10. "py_compile" — Compile Python source files

* 33.11. "compileall" — Byte-compile Python libraries

  * 33.11.1. Command-line use

  * 33.11.2. Public functions

* 33.12. "dis" — Disassembler for Python bytecode

  * 33.12.1. Bytecode analysis

  * 33.12.2. Analysis functions

  * 33.12.3. Python Bytecode Instructions

  * 33.12.4. Opcode collections

* 33.13. "pickletools" — Tools for pickle developers

  * 33.13.1. Command line usage

    * 33.13.1.1. Command line options

  * 33.13.2. Programmatic Interface
